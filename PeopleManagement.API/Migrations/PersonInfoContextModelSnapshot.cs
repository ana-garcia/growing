// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleManagement.API.DBContext;

#nullable disable

namespace PeopleManagement.API.Migrations
{
    [DbContext(typeof(PersonInfoContext))]
    partial class PersonInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("PeopleManagement.API.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 12345678,
                            Name = "Ana",
                            Surname = "Garcia"
                        });
                });

            modelBuilder.Entity("PeopleManagement.API.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Entry")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Exit")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpectedDuration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Motive")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entry = new DateTime(2022, 7, 25, 7, 6, 42, 102, DateTimeKind.Local).AddTicks(299),
                            ExpectedDuration = 2,
                            IsActive = true,
                            Motive = "teste de entrada",
                            PersonId = 12345678
                        },
                        new
                        {
                            Id = 2,
                            Entry = new DateTime(2022, 7, 25, 7, 6, 42, 102, DateTimeKind.Local).AddTicks(337),
                            Exit = new DateTime(2022, 7, 25, 7, 6, 42, 102, DateTimeKind.Local).AddTicks(339),
                            ExpectedDuration = 1,
                            IsActive = false,
                            Motive = "teste de entrada 2",
                            PersonId = 12345678
                        });
                });

            modelBuilder.Entity("PeopleManagement.API.Entities.Registration", b =>
                {
                    b.HasOne("PeopleManagement.API.Entities.Person", "Person")
                        .WithMany("Registrations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("PeopleManagement.API.Entities.Person", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
